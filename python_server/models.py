from sqlalchemy import Column, String, Text, DateTime, func
from sqlalchemy.sql import func as sql_func # Use alias to avoid name conflict

from .database import Base # Import Base from our database setup

class Note(Base):
    __tablename__ = "notes"

    # Use the unique ID generated by the backend (string)
    id = Column(String(255), primary_key=True, index=True)
    # Store user identifier (e.g., email or subject from JWT)
    user_id = Column(String(255), index=True, nullable=False)
    title = Column(Text, nullable=True) # Allow nullable title initially
    text = Column(Text, nullable=False)  # Renamed from content to text
    # Use server_default for database-level default timestamp
    created_at = Column(DateTime(timezone=True), server_default=sql_func.now())
    # Update timestamp automatically on modification (using database trigger usually, but 
    # server_onupdate can work for SQLAlchemy updates)
    updated_at = Column(DateTime(timezone=True), default=sql_func.now(), onupdate=sql_func.now())

    def __repr__(self):
        return f"<Note(id='{self.id}', user_id='{self.user_id}', title='{self.title[:20]}...')>" 